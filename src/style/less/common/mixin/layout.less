/*
  hgroup：块布局，有底边距。使用.inline变成行布局
    子元素：1、默认行布局，每个子元素之间有水平间距。
           2、使用.block变成块布局
           3、最后一个块布局容器（.hgroup、.vgroup、.block）没有底边距

  vgroup：块布局，有底边距。使用.inline变成行布局
    子元素：1、默认块布局，每个子元素之间有垂直边距。
           2、使用.inline变成行布局
           3、最后一个块布局容器（.hgroup、.vgroup、.block）没有底边距
*/
.m-group(@hgap, @vgap: @hgap){
  ._m-block_(){
    display: block;
    margin-bottom: @vgap;
  }
  ._m-inline_(){
    display: inline-block;
    margin-right: @hgap;
    &:last-child{
      margin-right: 0;
    }
  }
  ._fgroup_(){
    ._m-block_();
    &, & > .flex-hgroup, &.flex-vgroup{
      display: flex;
    }
    &.inline, .hgroup > &{
      display: inline-flex;
      margin-bottom: 0;
    }
  }
  .hgroup{
    ._m-block_();
    // 子元素默认都是行布局
    & > *{
      ._m-inline_();
    }
    .block{
      ._m-block_();
    }
  }
  .vgroup{
    ._m-block_();
    & > *{
      ._m-block_();
      &:last-child{
        margin-bottom: 0;
      }
    }
    .inline{
      ._m-inline_();
    }
  }
  .flex-hgroup{
    ._fgroup_();
    > *{
      ._m-inline_();
    }

    // 水平flex容器下的group系列底边距都取消
    & > &, & > .hgroup, & > .vgroup, & > .flex-vgroup{
      margin-bottom: 0;
    }
    align-items: center; // 元素水平对齐
    .pull-left{
      justify-content: flex-start;
    }
    .pull-right{
      justify-content: flex-end;
    }
  }
  .flex-vgroup{
    ._fgroup_();
    justify-content: center;
    .pull-left{
      align-items: flex-start;
    }
    .pull-right{
      align-items: flex-end;
    }
  }
  ._m-nohgap_(@name){
    .@{name}, .@{name} > *, .@{name}-self, .@{name}-sub > *{
      margin-right: 0;
    }
  }
  ._m-novgap_(@name){
    .@{name}, .@{name} > *, .@{name}-self, .@{name}-sub > *{
      margin-bottom: 0;
    }
  }
  // 无水平边距
  ._m-nohgap_(nohgap);
  // 无垂直边距
  ._m-novgap_(novgap);
  // .nogap同时没有水平边距和垂直边距
  ._m-nohgap_(nogap);
  ._m-novgap_(nogap);
}
// 私有mixin，设置水平间距
._m-group-hgap_(@hgap){
  &.hgroup > *, &.flex-hgroup > *{
    margin-right: @hgap;
    &:last-child{
      margin-right: 0;
    }
  }
}
// 私有mixin，设置垂直间距
._m-group-vgap_(@vgap){
  &.hgroup, &.vgroup, &.flex-vgroup > *{
    margin-bottom: @vgap;
    &:last-child{
      margin-bottom: 0;
    }
  }
}
/* 指定一个额外的class，重新定义group系列的间距大小 */
.m-group-gap(@name, @hgap, @vgap: @hgap){
  .@{name}{
    ._m-group-hgap_(@hgap);
    ._m-group-vgap_(@vgap);
  }
}
.m-group-hgap(@name, @hgap){
  .@{name}{
    ._m-group-hgap_(@hgap);
  }
}
.m-group-vgap(@name, @vgap){
  .@{name}{
    ._m-group-vgap_(@hgap);
  }
}

/** 栅格系统 */
// 默认12份，递增单位是1份
.grid(@nums: 12, @interval: 1, @now: @interval)when(@nums >= @now){
  .grid-gen(@nums: 12, @interval: 1, @now: @interval)when(@nums >= @now){
    .col-@{now}{
      float: left;
      width: @now / @nums * 100%;
    }
    .grid-gen(@nums, @interval, @now + @interval)
  }
  .grid-@{nums}{
    .grid-gen(@nums, @interval, @now);
  }
}
